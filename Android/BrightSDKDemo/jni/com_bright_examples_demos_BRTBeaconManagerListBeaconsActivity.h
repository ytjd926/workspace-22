/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <math.h>
/* Header for class com_hello_hello_HelloActivity */

#ifndef _Included_com_bright_examples_demos_BRTBeaconManagerListBeaconsActivity
#define _Included_com_bright_examples_demos_BRTBeaconManagerListBeaconsActivity
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     TestTriangulation
 * Method:    calculatePosition
 * Signature: ([D)[D
 */

JNIEXPORT jstring JNICALL Java_com_bright_examples_demos_BRTBeaconManagerListBeaconsActivity_sayHello
  (JNIEnv *, jclass);

JNIEXPORT jdoubleArray JNICALL Java_com_bright_examples_demos_BRTBeaconManagerListBeaconsActivity_calculatePosition
  (JNIEnv *, jclass, jdoubleArray);



#include <math.h>

int call_triangulation(const double x1, const double y1, const double r1, 
	const double x2, const double y2, const double r2, 
	const double x3, const double y3, const double r3, 
	double &x, double &y);

class  Point
{
public:
	double x, y;
	Point(){ x = y = 0.0; };
	Point(double x, double y);
	~Point(){};

	Point operator +(Point p);
	double distance_sqr(Point point_b);
	double distance(Point point_b);
};

class  Circle
{
public:
	Point center;
	double r;
	Circle(){ r = 0.0; };
	Circle(Point point, double r);
	Circle(double x, double y, double r);
	~Circle(){};

	void set_circle(Point point, double r);
	void set_circle(double x, double y, double r);
	int insect(Circle circle_b, Point intersections[]);

};

class Triangulation
{
private:
	Circle * circle_list;
	int num_circles;
	int computation();
	
public:
	
	Point p;
	Triangulation(){ p.x = p.y = 0.0; num_circles = 0; };
	Triangulation(Circle *circle_list, int num_circles);
	~Triangulation(){};

	int set_circle_list(Circle * circle_list, int num);
	//int get_num_circles();
};

int double_equals(double const a, double const b);

#ifdef __cplusplus
}
#endif
#endif
